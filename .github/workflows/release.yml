name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install workspace dependencies
      run: |
        npm install --workspaces
        
    - name: Build all packages
      run: |
        npm run build:react
        npm run build:html
        npm run build:scaffolder
        
    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation - you can enhance this
        echo "## Changes" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --oneline --pretty=format:"- %s" $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create archives for release assets
      run: |
        cd packages/react && tar -czf ../../build-stack-react.tar.gz dist/
        cd ../html && tar -czf ../../build-stack-html.tar.gz dist/
        cd ../create-build-stack && tar -czf ../../create-build-stack.tar.gz dist/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: false
        files: |
          build-stack-react.tar.gz
          build-stack-html.tar.gz
          create-build-stack.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}